{"version":3,"file":"Radio.js","sources":["../src/components/Form/Radio.vue"],"sourcesContent":["<template>\n<nav :class=\"[\n  'form form-radio',\n  inline && 'form-radio--inline',\n  type === 'button' && 'form-radio--button',\n]\">\n  <div class=\"form-radio__wrap\">\n    <div\n      v-if=\"type === 'button'\"\n      v-for=\"(o,k) in items\"\n      class=\"form-radio__button\">\n      <button\n        type=\"button\"\n        :disabled=\"modelValue === o.key || (!modelValue && k === 0)\"\n        @click=\"onClickItem(o.key)\">\n        {{o.label}}\n      </button>\n    </div>\n    <label v-else v-for=\"(o,k) in items\">\n      <input\n        type=\"radio\"\n        :name=\"name\"\n        :id=\"k === 0 ? id : undefined\"\n        :value=\"o.key\"\n        :checked=\"modelValue === o.key || (!modelValue && k === 0)\"\n        @change=\"onChange\"\n        @blur=\"$emit('blur:modelValue', $event.target.value)\">\n      <em>{{o.label}}</em>\n    </label>\n  </div>\n</nav>\n</template>\n\n<script setup>\nimport { getValueFromType } from '~/libs/util';\n\nconst name = 'FormRadio';\nconst props = defineProps({\n  type: String, // undefined,button\n  items: { type: Array, required: true },\n  name: String,\n  id: String,\n  inline: Boolean,\n  modelType: String,\n  modelValue: [ String, Number, Boolean ],\n});\nconst emits = defineEmits([ 'update:modelValue', 'blur:modelValue' ]);\n\nfunction onChange(e)\n{\n  emits('update:modelValue', getValueFromType(props.modelType, e.target.value));\n}\nfunction onClickItem(key)\n{\n  emits('update:modelValue', getValueFromType(props.modelType, key));\n}\n</script>\n\n<style src=\"./Radio.scss\" lang=\"scss\" scoped></style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoCA,UAAM,OAAO;AAYb,sBAAkB,GAClB;AACE,YAAM,qBAAqB,iBAAiB,MAAM,WAAW,EAAE,OAAO;AAAA;AAExE,yBAAqB,KACrB;AACE,YAAM,qBAAqB,iBAAiB,MAAM,WAAW;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}