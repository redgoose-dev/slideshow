{"version":3,"file":"General.js","sources":["../src/screen/Preference/General.vue"],"sourcesContent":["<template>\n<fieldset>\n  <legend>General fields</legend>\n  <div class=\"fields\">\n    <div class=\"field-basic\">\n      <h3 class=\"field-title\">\n        <label for=\"pref_language\">\n          {{t('base.language')}}\n        </label>\n      </h3>\n      <p class=\"field-description\">\n        {{t('description.language')}}\n      </p>\n      <div class=\"field-basic__body\">\n        <FormSelect\n          name=\"pref_language\"\n          id=\"pref_language\"\n          v-model=\"state.language\"\n          @update:modelValue=\"onSave\">\n          <option value=\"en\">{{t('language.en')}}</option>\n          <option value=\"ko\">{{t('language.ko')}}</option>\n        </FormSelect>\n      </div>\n    </div>\n    <hr class=\"field-line\">\n    <div class=\"field-switch\">\n      <div class=\"field-switch__body\">\n        <h3 class=\"field-title\">\n          <label for=\"pref_hud\">\n            {{t('base.hud')}}\n          </label>\n        </h3>\n        <p class=\"field-description\">\n          {{t('description.hud')}}\n        </p>\n      </div>\n      <div class=\"field-switch__input\">\n        <FormSwitch\n          name=\"pref_hud\"\n          id=\"pref_hud\"\n          v-model=\"state.hud\"\n          @update:modelValue=\"onSave\"/>\n      </div>\n    </div>\n    <div class=\"field-switch\">\n      <div class=\"field-switch__body\">\n        <h3 class=\"field-title\">\n          <label for=\"pref_hoverVisibleHud\">\n            {{t('title.hoverVisibleHud')}}\n          </label>\n        </h3>\n        <p class=\"field-description\">\n          {{t('description.hoverVisibleHud')}}\n        </p>\n      </div>\n      <div class=\"field-switch__input\">\n        <FormSwitch\n          name=\"pref_hoverVisibleHud\"\n          id=\"pref_hoverVisibleHud\"\n          v-model=\"state.hoverVisibleHud\"\n          @update:modelValue=\"onSave\"/>\n      </div>\n    </div>\n    <div class=\"field-switch\">\n      <div class=\"field-switch__body\">\n        <h3 class=\"field-title\">\n          <label for=\"pref_clickVisibleHud\">\n            {{t('title.touchHud')}}\n          </label>\n        </h3>\n        <p class=\"field-description\">\n          {{t('description.touchHud')}}\n        </p>\n      </div>\n      <div class=\"field-switch__input\">\n        <FormSwitch\n          name=\"pref_clickVisibleHud\"\n          id=\"pref_clickVisibleHud\"\n          v-model=\"state.clickVisibleHud\"\n          @update:modelValue=\"onSave\"/>\n      </div>\n    </div>\n    <div class=\"field-basic\">\n      <h3 class=\"field-title\">\n        <label for=\"pref_hudContents\">\n          {{t('title.visibleContents')}}\n        </label>\n      </h3>\n      <p class=\"field-description\">\n        {{t('description.visibleContents')}}\n      </p>\n      <div class=\"field-basic__body\">\n        <ul class=\"field-checks\">\n          <li>\n            <FormCheckbox\n              name=\"pref_hudContents\"\n              id=\"pref_hudContents\"\n              :label=\"t('base.menu')\"\n              :modelValue=\"state.visibleHudContents.menu\"\n              @update:modelValue=\"o => onUpdateHudContents('menu', o)\"/>\n          </li>\n          <li>\n            <FormCheckbox\n              name=\"pref_hudContents\"\n              :label=\"t('base.caption')\"\n              :modelValue=\"state.visibleHudContents.caption\"\n              @update:modelValue=\"o => onUpdateHudContents('caption', o)\"/>\n          </li>\n          <li>\n            <FormCheckbox\n              name=\"pref_hudContents\"\n              :label=\"t('base.controller')\"\n              :modelValue=\"state.visibleHudContents.controller\"\n              @update:modelValue=\"o => onUpdateHudContents('controller', o)\"/>\n          </li>\n          <li>\n            <FormCheckbox\n              name=\"pref_hudContents\"\n              :label=\"t('base.paginate')\"\n              :modelValue=\"state.visibleHudContents.paginate\"\n              @update:modelValue=\"o => onUpdateHudContents('paginate', o)\"/>\n          </li>\n          <li>\n            <FormCheckbox\n              name=\"pref_hudContents\"\n              :label=\"t('base.group')\"\n              :modelValue=\"state.visibleHudContents.group\"\n              @update:modelValue=\"o => onUpdateHudContents('group', o)\"/>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <hr class=\"field-line\">\n    <div class=\"field-basic\">\n      <h3 class=\"field-title\">\n        <label>\n          {{t('title.backupOrRestore')}}\n        </label>\n      </h3>\n      <p class=\"field-description\">\n        {{t('description.backup')}}\n      </p>\n      <div class=\"field-basic__body\">\n        <div class=\"grid import-data\">\n          <div>\n            <ButtonBasic color=\"key\" @click=\"onClickBackup\">\n              {{t('base.backup')}}\n            </ButtonBasic>\n          </div>\n          <div>\n            <ButtonBasic color=\"key\" @click=\"onClickRestore\">\n              {{t('base.restore')}}\n            </ButtonBasic>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"field-basic\">\n      <h3 class=\"field-title\">\n        <label>{{t('base.reset')}}</label>\n      </h3>\n      <p class=\"field-description\">\n        {{t('description.reset')}}\n      </p>\n      <div class=\"field-basic__body\">\n        <ButtonBasic color=\"danger\" @click=\"onClickReset\">\n          {{t('base.resetSlideshow')}}\n        </ButtonBasic>\n      </div>\n    </div>\n  </div>\n</fieldset>\n</template>\n\n<script setup>\nimport { reactive } from 'vue';\nimport store from '~/store';\nimport i18n from '~/i18n';\nimport * as object from '~/libs/object';\nimport * as local from '~/libs/local';\nimport * as string from '~/libs/string';\nimport FormSelect from '~/components/Form/Select.vue';\nimport FormSwitch from '~/components/Form/Switch.vue';\nimport FormCheckbox from '~/components/Form/Checkbox.vue';\nimport ButtonBasic from '~/components/Button/Basic.vue';\n\nconst props = defineProps({\n  structure: Object,\n});\nconst emits = defineEmits({\n  'update': null,\n});\nconst { t } = i18n.global;\nlet state = reactive({\n  language: props.structure.language,\n  hud: props.structure.hud,\n  hoverVisibleHud: props.structure.hoverVisibleHud,\n  clickVisibleHud: props.structure.clickVisibleHud,\n  visibleHudContents: object.convertPureObject(props.structure.visibleHudContents),\n});\n\n// methods\nfunction onSave()\n{\n  const structure = object.convertPureObject(state);\n  emits('update', structure);\n}\nfunction onUpdateHudContents(key, value)\n{\n  state.visibleHudContents[key] = value;\n  onSave();\n}\nfunction onClickBackup()\n{\n  if (!confirm(t('confirm.backup'))) return;\n  let result = {\n    preference: object.convertPureObject(store.state.preference),\n    tree: object.convertPureObject(store.state.tree),\n  };\n  const date = new Date();\n  let dateFormat = `${date.getFullYear()}${string.twoDigit(date.getMonth() + 1)}${string.twoDigit(date.getDate())}`;\n  const element = document.createElement('a');\n  element.setAttribute('href', `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(result, null, 2))}`);\n  element.setAttribute('download', `slideshow_${dateFormat}.json`);\n  element.click();\n}\nfunction onClickRestore()\n{\n  return new Promise((resolve, reject) => {\n    const el = document.createElement('input');\n    el.setAttribute('type', 'file');\n    el.setAttribute('accept', 'application/json');\n    el.addEventListener('change', e => {\n      if (!(e.target.files && e.target.files.length > 0))\n      {\n        alert(t('alert.noSelectedFile'));\n        return;\n      }\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        try\n        {\n          let json = JSON.parse(String(e.target.result));\n          if (!confirm(t('confirm.restore'))) return;\n          if (!(json.preference || json.tree)) throw new Error('no data');\n          if (json.preference) store.dispatch('changePreference', json.preference);\n          if (json.tree) store.dispatch('changeTree', json.tree);\n          store.dispatch('changeMode', null);\n          store.dispatch('changeActiveSlide', store.state.preference.slides.initialNumber);\n          store.dispatch('changeAutoplay', false);\n          store.commit('updateUseKeyboardEvent', true);\n          alert(t('alert.completeRestore'));\n          local.main.restart().then();\n        }\n        catch(e)\n        {\n          if (window.dev) console.error(e.message);\n          alert(t('alert.failedRestore'));\n        }\n      };\n      reader.readAsText(file);\n    }, false);\n    el.click();\n  });\n}\nfunction onClickReset()\n{\n  if (!confirm(t('confirm.reset'))) return;\n  store.dispatch('reset').then(() => local.main.restart().then());\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@use '../../assets/scss/mixins';\n@use './fieldset';\n.import-data {\n  --column: 1;\n  --gap: 10px;\n  @include mixins.responsive(tablet) {\n    --column: 2;\n  }\n}\n.reset {\n  margin-top: 16px;\n}\n</style>\n"],"names":["object.convertPureObject","string.twoDigit","local.main"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA,UAAM,EAAE,MAAM,KAAK;AACnB,QAAI,QAAQ,SAAS;AAAA,MACnB,UAAU,MAAM,UAAU;AAAA,MAC1B,KAAK,MAAM,UAAU;AAAA,MACrB,iBAAiB,MAAM,UAAU;AAAA,MACjC,iBAAiB,MAAM,UAAU;AAAA,MACjC,oBAAoBA,kBAAyB,MAAM,UAAU;AAAA;AAI/D,sBACA;AACE,YAAM,YAAYA,kBAAyB;AAC3C,YAAM,UAAU;AAAA;AAElB,iCAA6B,KAAK,OAClC;AACE,YAAM,mBAAmB,OAAO;AAChC;AAAA;AAEF,6BACA;AACE,UAAI,CAAC,QAAQ,EAAE;AAAoB;AACnC,UAAI,SAAS;AAAA,QACX,YAAYA,kBAAyB,MAAM,MAAM;AAAA,QACjD,MAAMA,kBAAyB,MAAM,MAAM;AAAA;AAE7C,YAAM,OAAO,IAAI;AACjB,UAAI,aAAa,GAAG,KAAK,gBAAgBC,SAAgB,KAAK,aAAa,KAAKA,SAAgB,KAAK;AACrG,YAAM,UAAU,SAAS,cAAc;AACvC,cAAQ,aAAa,QAAQ,gCAAgC,mBAAmB,KAAK,UAAU,QAAQ,MAAM;AAC7G,cAAQ,aAAa,YAAY,aAAa;AAC9C,cAAQ;AAAA;AAEV,8BACA;AACE,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAM,KAAK,SAAS,cAAc;AAClC,WAAG,aAAa,QAAQ;AACxB,WAAG,aAAa,UAAU;AAC1B,WAAG,iBAAiB,UAAU,OAAK;AACjC,cAAI,CAAE,GAAE,OAAO,SAAS,EAAE,OAAO,MAAM,SAAS,IAChD;AACE,kBAAM,EAAE;AACR;AAAA;AAEF,gBAAM,OAAO,EAAE,OAAO,MAAM;AAC5B,gBAAM,SAAS,IAAI;AACnB,iBAAO,SAAS,QAAK;AACnB,gBACA;AACE,kBAAI,OAAO,KAAK,MAAM,OAAO,GAAE,OAAO;AACtC,kBAAI,CAAC,QAAQ,EAAE;AAAqB;AACpC,kBAAI,CAAE,MAAK,cAAc,KAAK;AAAO,sBAAM,IAAI,MAAM;AACrD,kBAAI,KAAK;AAAY,sBAAM,SAAS,oBAAoB,KAAK;AAC7D,kBAAI,KAAK;AAAM,sBAAM,SAAS,cAAc,KAAK;AACjD,oBAAM,SAAS,cAAc;AAC7B,oBAAM,SAAS,qBAAqB,MAAM,MAAM,WAAW,OAAO;AAClE,oBAAM,SAAS,kBAAkB;AACjC,oBAAM,OAAO,0BAA0B;AACvC,oBAAM,EAAE;AACRC,mBAAW,UAAU;AAAA,qBAEjB,IAAN;AAEE,kBAAI,OAAO;AAAK,wBAAQ,MAAM,GAAE;AAChC,oBAAM,EAAE;AAAA;AAAA;AAGZ,iBAAO,WAAW;AAAA,WACjB;AACH,WAAG;AAAA;AAAA;AAGP,4BACA;AACE,UAAI,CAAC,QAAQ,EAAE;AAAmB;AAClC,YAAM,SAAS,SAAS,KAAK,MAAMA,KAAW,UAAU;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}