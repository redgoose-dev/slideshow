// responsive
@mixin responsive($range)
{
  @if $range == mobile-large
  {
    @media (min-width: 480px) { @content; }
  }
  @else if $range == tablet
  {
    @media (min-width: 768px) { @content; }
  }
  @else if $range == desktop
  {
    @media (min-width: 1024px) { @content; }
  }
  @else if $range == max
  {
    @media (min-width: 1440px) { @content; }
  }
}

// retina display
@mixin retina()
{
  @media (-webkit-min-device-pixel-ratio: 2) { @content; }
}

// dark mode
@mixin dark-mode-root()
{
  &[data-theme=dark] {
    @content;
  }
  &[data-theme=system],
  &:not([data-theme]),
  &[data-theme=""] {
    @media (prefers-color-scheme: dark) {
      @content;
    }
  }
}
@mixin dark-mode()
{
  :global(.slideshow[data-theme=dark]) & {
    @content;
  }
  @media (prefers-color-scheme: dark) {
    :global(.slideshow[data-theme=system]) &,
    :global(.slideshow:not([data-theme])) &,
    :global(.slideshow[data-theme=""]) & {
      @content;
    }
  }
}

// background blur
@mixin background-blur($size: 8px)
{
  @supports (backdrop-filter: blur(#{$size})) or (-webkit-backdrop-filter: blur(#{$size})) {
    backdrop-filter: blur(#{$size});
    -webkit-backdrop-filter: blur(#{$size});
    @content;
  }
}

// linear gradient
@mixin color-linear-gradient($matt-color, $start, $end, $direction:'vertical')
{
  background: $matt-color;
  @if $direction == 'horizontal'
  {
    background: linear-gradient(to right, #{$start}, #{$end});
  }
  @else
  {
    background: linear-gradient(to bottom, #{$start}, #{$end});
  }
}

// single line text
@mixin text-single-line()
{
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
